---

# 优化OS
- name: Config /etc/sysctl.conf and /etc/security/limits.conf and sshd
  shell: |
    cat > /etc/sysctl.conf <<EOF
    kernel.shmmni = 4096
    vm.overcommit_memory = 2 # See Segment Host Memory
    vm.overcommit_ratio = 95 # See Segment Host Memory
    
    net.ipv4.ip_local_port_range = 10000 65535 # See Port Settings
    kernel.sem = 250 2048000 200 8192
    kernel.sysrq = 1
    kernel.core_uses_pid = 1
    kernel.msgmnb = 65536
    kernel.msgmax = 65536
    kernel.msgmni = 2048
    net.ipv4.tcp_syncookies = 1
    net.ipv4.conf.default.accept_source_route = 0
    net.ipv4.tcp_max_syn_backlog = 4096
    net.ipv4.conf.all.arp_filter = 1
    net.core.netdev_max_backlog = 10000
    net.core.rmem_max = 2097152
    net.core.wmem_max = 2097152
    vm.swappiness = 10
    vm.zone_reclaim_mode = 0
    vm.dirty_expire_centisecs = 500
    vm.dirty_writeback_centisecs = 100
    vm.dirty_background_bytes = 1610612736
    vm.dirty_bytes = 4294967296
    
    # following depends on specific machine
    EOF
    echo 'kernel.shmall = '$(echo $(expr $(getconf _PHYS_PAGES) / 2))  >> /etc/sysctl.conf
    echo 'kernel.shmmax = '$(echo $(expr $(getconf _PHYS_PAGES) / 2 \* $(getconf PAGE_SIZE)))  >> /etc/sysctl.conf
    # 64GB
    MemTotal=$(awk 'BEGIN {OFMT = "%.0f";} /MemTotal/ {print $2 * 1024;}' /proc/meminfo)
    if [ "${MemTotal}" -gt "68719476736" ]; then
      echo 'vm.dirty_background_ratio = 0' >> /etc/sysctl.conf
      echo 'vm.dirty_ratio = 0' >> /etc/sysctl.conf
    else
      echo 'vm.dirty_background_ratio = 3' >> /etc/sysctl.conf
      echo 'vm.dirty_ratio = 10' >> /etc/sysctl.conf
    fi
    # 强制系统保留3%的内存
    awk 'BEGIN {OFMT = "%.0f";} /MemTotal/ {print "vm.min_free_kbytes =", $2 * .03;}' /proc/meminfo >> /etc/sysctl.conf
    # core dump
    echo 'kernel.core_pattern=/var/core/core.%h.%t' >> /etc/sysctl.conf
    # limit
    cat > /etc/security/limits.conf <<EOF
    * soft nofile 524288
    * hard nofile 524288
    * soft nproc 131072
    * hard nproc 131072
    * soft  core unlimited
    EOF
    # 禁用大透明页
    grubby --update-kernel=ALL --args="transparent_hugepage=never"
    # 设置硬盘调度方式
    grubby --update-kernel=ALL --args="elevator=deadline"
    # 禁用 IPC Object Removal
    echo 'RemoveIPC=no' >> /etc/systemd/logind.conf
    # 增加ssh会话数
    if grep -i 'MaxSessions 200' /etc/ssh/sshd_config; then
      echo 'Session aready config.'
    else
      echo 'MaxStartups 10:30:200' >> /etc/ssh/sshd_config
      echo 'MaxSessions 200' >> /etc/ssh/sshd_config
    fi
    # 让系统参数立即生效
    sysctl -p
    exit 0
  args:
    executable: /bin/bash
    chdir: /tmp

- name: Create user gpadmin if it not exist.
  shell: "id -u gpadmin &>/dev/null || useradd -p $(echo {{ gp.password }} | openssl passwd -1 -stdin) gpadmin"

- name: Create ssh key if not exist.
  shell: ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa <<<y 2>&1 >/dev/null
  become: yes
  become_user: gpadmin

- name: Copy greenplum-db-6.23.3-rhel7-x86_64.rpm to remote /tmp
  copy:
    src: 3rd-repo/greenplum/greenplum-db-6.23.3-rhel7-x86_64.rpm
    dest: /tmp/greenplum-db-6.23.3-rhel7-x86_64.rpm
    mode: '0744'

- name: Copy pxf-gp6-6.5.0-2.el7.x86_64.rpm to remote /tmp
  copy:
    src: 3rd-repo/greenplum/pxf-gp6-6.5.0-2.el7.x86_64.rpm
    dest: /tmp/pxf-gp6-6.5.0-2.el7.x86_64.rpm
    mode: '0744'

- name: Install necessary software with yum.
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - expect
    - sshpass
    - /tmp/greenplum-db-6.23.3-rhel7-x86_64.rpm
    - /tmp/pxf-gp6-6.5.0-2.el7.x86_64.rpm

- name: Grant gpadmin to binary.
  shell: |
    chown -R gpadmin:gpadmin /usr/local/greenplum*
    chown -R gpadmin:gpadmin /usr/local/pxf-gp*

- name: Config GP tools env.
  shell: echo 'source /usr/local/greenplum-db/greenplum_path.sh' >> /home/gpadmin/.bashrc
  become: yes
  become_user: gpadmin

- name: Config /etc/hosts and hostfile_exkeys
  template:
    src:  "{{ item }}.j2"
    dest: "/home/gpadmin/{{ item }}"
  with_items:
    - hosts
    - hostfile_exkeys
  become: yes
  become_user: gpadmin

- name: Append to /etc/hosts
  shell: cat /home/gpadmin/hosts >> /etc/hosts

- name: Prepare master directory
  file:
    path: "{{ gp.master_data_directory }}"
    state: directory
    owner: gpadmin
    group: gpadmin

- name: Prepare primary data directory script
  template:
    src:  "{{ item }}.j2"
    dest: "/home/gpadmin/{{ item }}"
  with_items:
    - new_primary_data_path.sh
  become: yes
  become_user: gpadmin

- name: Create primary data path.
  shell: bash /home/gpadmin/new_primary_data_path.sh

- name: Prepare gpcc directory
  file:
    path: "/usr/local/greenplum-cc-6.8.4"
    state: directory
    owner: gpadmin
    group: gpadmin

- name: Create gpcc symbolic link
  file:
    src: "/usr/local/greenplum-cc-6.8.4"
    dest: "/usr/local/greenplum-cc"
    state: link
    owner: gpadmin
    group: gpadmin

- name: Add gpcc env
  shell: |
    echo 'export PATH=$PATH:/usr/local/pxf-gp6/bin' >> /home/gpadmin/.bashrc
  become: yes
  become_user: gpadmin

# - name: Prepare mirror data directory
#   file:
#     path: /opt/data/mirror
#     state: directory
#     owner: gpadmin
#     group: gpadmin